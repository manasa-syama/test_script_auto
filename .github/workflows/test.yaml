name: Auto Sync Branch

on:
  schedule:
    - cron: '*/5 * * * *'  # 8:00 AM IST (2:30 AM UTC)

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Set up log file
        id: setup_log
        run: |
          TIMESTAMP=$(date +'%Y%m%d_%H%M%S')
          LOG_FILE="sync_log_${TIMESTAMP}.txt"
          echo "Log file created: $LOG_FILE" > $LOG_FILE
          echo "$(date) - Starting sync operation..." >> $LOG_FILE
          echo "::set-output name=log_file::$LOG_FILE"

      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: develop  # Checkout the develop branch where the workflow file resides

      - name: Set up Git
        run: |
          git config --global user.name "manasa-syama"
          git config --global user.email "manasa.syama@gmail.com"

      - name: Fetch branches
        run: |
          git fetch origin source1
          git fetch origin target1

      - name: Check for sa_test branch
        id: check_temp_branch
        run: |
          git fetch origin
          if git show-ref --verify --quiet refs/remotes/origin/sa_test; then
            echo "sa_test branch exists." >> ${{ steps.setup_log.outputs.log_file }}
            echo "branch_exists=true" >> $GITHUB_ENV
          else
            echo "sa_test branch does not exist." >> ${{ steps.setup_log.outputs.log_file }}
            echo "branch_exists=false" >> $GITHUB_ENV
          fi

      - name: Create or reset sa_test branch
        run: |
          if [ "${{ env.branch_exists }}" == "true" ]; then
            echo "*****sa_test branch exists*****" >> ${{ steps.setup_log.outputs.log_file }}
            git reset --hard origin/target1  # Reset sa_test to the latest from target1
          else
            git checkout -b sa_test origin/target1  # Create a new sa_test branch
            git push origin sa_test
            echo "Created new branch sa_test." >> ${{ steps.setup_log.outputs.log_file }}
          fi

      - name: Merge Operation
        id: merge_operation_sa_test
        run: |
          git checkout sa_test
          git fetch origin
          if output=$(git merge origin/source1 2>&1); then
            echo "Merge successful!" >> ${{ steps.setup_log.outputs.log_file }}
            git push origin sa_test
          else
            echo "Error: $output" >> ${{ steps.setup_log.outputs.log_file }}
            if echo "$output" | grep -q "CONFLICT"; then
               echo "Merge conflicts detected. Please resolve them." >> ${{ steps.setup_log.outputs.log_file }}
               git merge --abort
            else
              echo "An error occurred during the merge (not a conflict)." >> ${{ steps.setup_log.outputs.log_file }}
            fi
            exit 1
          fi

      - name: Merge Operation on target1  
        id: merge_operation_target1
        run: |
          git checkout target1
          git fetch origin target1
          if output=$(git merge origin/source1 2>&1); then
            echo "Merge successful!" >> ${{ steps.setup_log.outputs.log_file }}
            git push origin target1 --force
          else
            echo "Error: $output" >> ${{ steps.setup_log.outputs.log_file }}
            if echo "$output" | grep -q "CONFLICT"; then
               echo "Merge conflicts detected. Please resolve them." >> ${{ steps.setup_log.outputs.log_file }}
               git merge --abort
            else
              echo "An error occurred during the merge (not a conflict)." >> ${{ steps.setup_log.outputs.log_file }}
            fi
            exit 1
          fi              

      - name: Clean up temporary branch        
        run: |
          git branch -D sa_test  # Delete the local sa_test branch
          git push origin --delete sa_test  # Delete the remote sa_test branch
          echo "sa_test branch has been deleted." >> ${{ steps.setup_log.outputs.log_file }}

      - name: Upload log
        uses: actions/upload-artifact@v2
        with:
          name: sync-log
          path: ${{ steps.setup_log.outputs.log_file }}
