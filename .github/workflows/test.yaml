name: Auto Sync Branch

on:
  push:
    branches:
      - source1  # Trigger on pushes to source1
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v2
        with:
          ref: develop  # Checkout the develop branch where the workflow file resides

      - name: Set up Git
        run: |
          git config --global user.name "manasa-syama"
          git config --global user.email "manasa.syama@gmail.com"

      - name: Fetch branches
        run: |
          git fetch origin source1
          git fetch origin target1

      - name: Check for temp1 branch
        id: check_temp_branch
        run: |
          if git show-ref --verify --quiet refs/heads/temp1; then
            echo "temp1 branch exists."
            echo "branch_exists=true" >> $GITHUB_ENV
          else
            echo "temp1 branch does not exist."
            echo "branch_exists=false" >> $GITHUB_ENV
          fi

      - name: Create or reset temp1 branch
        run: |
          if [ "${{ env.branch_exists }}" = "true" ]; then
            git checkout temp1
            git reset --hard origin/source1  # Reset temp1 to the latest from source1
          else
            git checkout -b temp1 origin/source1  # Create a new temp1 branch
          fi

      - name: Create temporary branch
        run: |
          git merge origin/source1 --no-commit --no-ff || echo "Merge failed"

      - name: Check for merge conflicts
        id: check_conflicts
        run: |
          if git ls-files -u | grep -q .; then
            echo "Merge conflicts detected."
            echo "conflicts=true" >> $GITHUB_ENV
            git merge --abort  # Abort the merge
          else
            echo "No conflicts detected."
            echo "conflicts=false" >> $GITHUB_ENV
            git commit -m "Merged source1 into temp1"
          fi

      - name: Sync to target1 (if no conflicts)
        if: env.conflicts == 'false'
        run: |
          git checkout target1
          git merge temp1
          git push origin target1

      - name: Clean up temporary branch
        if: env.conflicts == 'false'
        run: |
          git branch -D temp1
